{"version":3,"sources":["serviceWorker.js","store/actions/authActions.js","components/layout/SignedInLinks.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","Config/fbConfig.js","index.js"],"names":["Boolean","window","location","hostname","match","connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","console","log","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedInLinks","id","state","firebase","uid","layout_SignedInLinks","SignedOutLinks_SignedInLinks","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","key","Notifications","notifications","item","user","context","time","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","params","data","content","SignIn","email","password","handleChange","event","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","onSubmit","htmlFor","onChange","authError","message","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","e","signUp","userData","_ref3","getFirestore","createUserWithEmailAndPassword","doc","set","CreateProject","createProject","history","push","add","objectSpread","authorId","Date","App","layout_Navbar","exact","path","component","ProjectDetails","initState","authReducer","arguments","length","undefined","action","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f7e0c22.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default function signIn(credentials){\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase()\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err })\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: 'SIGNOUT_SUCCESS'})\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (userData) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase()\r\n        const firestore = getFirestore()\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            userData.email,\r\n            userData.password\r\n        ).then((user) => {\r\n            console.log(user)\r\n            return firestore.collection('users').doc(user.user.uid).set({\r\n                firstName: userData.firstName,\r\n                lastName: userData.lastName,\r\n                initials: userData.firstName[0] + userData.lastName[0],\r\n            })\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  console.log(props)\r\n\r\n  const handleLogOut = () => {\r\n    props.signOut()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"right hide-on-med-and-down\">\r\n        <li><NavLink to='/create'>New Project</NavLink></li>\r\n        <li><NavLink to='/' onClick={handleLogOut}>Log Out</NavLink></li>\r\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      signOut: () => dispatch(signOut())\r\n  }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks)","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport default function SignedInLinks() {\r\n    return (\r\n        <ul id=\"nav-mobile\" className=\"right\">\r\n            <li><NavLink to=\"/signup\">Signup</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Navbar(props) {\r\n    console.log(props)\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <NavLink to=\"/\" className=\"brand-logo\">Home</NavLink>\r\n                {props.auth.uid ? <SignedInLinks profile = {props.profile} /> : <SignedOutLinks/>}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nexport default function ProjectSummary( {project} ){\r\n    console.log(project)\r\n    return (\r\n        <div>\r\n             <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title \">{project.title}</span>\r\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n              return (\r\n                <Link to={\"/project/\" + project.id} key={project.id}>\r\n                  <ProjectSummary project = {project}/>\r\n                  </Link>\r\n              )\r\n            })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList","import React from 'react'\r\nimport moment from 'moment'\r\nconst Notifications = (props) => {\r\n  const { notifications } = props\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"online-users\">\r\n            { notifications && notifications.map(item => {\r\n              return(\r\n                <li key={item.id}>\r\n                  <span className=\"pink-text\">{item.user} </span>\r\n                  <span>{item.context}</span>\r\n                  <div className=\"grey-text note-date\">\r\n                    {moment(item.time.toDate()).calendar()}\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications","import React, { Component } from 'react'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport Notifications from './Notifications'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    \r\n    // console.log(this.props);\r\n    const { projects, notifications } = this.props;\r\n    const { auth } = this.props\r\n        if(!auth.uid)\r\n            return <Redirect to='/signin' />\r\n    \r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] }\r\n  , { collection: 'notifications' , limit: 3, orderBy: ['time', 'desc'] }\r\n])\r\n)(Dashboard)","import React from 'react'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { Redirect } from 'react-router-dom' \r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const id = props.match.params.id;\r\n  console.log(props)\r\n  const { auth, project } = props\r\n  if(!auth.uid)\r\n      return <Redirect to='/signin' />\r\n  if(project){\r\n    return(\r\n    <div className=\"container section project-details\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Project title - { id }</span>\r\n          <p>{project.content}</p>\r\n        </div>\r\n        <div className=\"card-action grey lighten-4 grey-text\">\r\n          <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n          <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n  else\r\n  return (\r\n    <p className=\"center\">Loading Data</p>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  console.log(id)\r\n  const projects = state.firestore.data.projects\r\n  const p = projects ? projects[id] : null\r\n  return {\r\n    project: p,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' }\r\n  ]) //Once firestore's data changes firestoreReducer will activate and change the firestore state too\r\n  )\r\n(ProjectDetails)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport signIn from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        this.props.signIn(this.state)\r\n        this.setState({\r\n            email: \"\",\r\n            password:\"\"\r\n        })\r\n        console.log(event)\r\n    }\r\n    render() {\r\n        const { auth } = this.props\r\n        if(auth.uid)\r\n            return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} value={this.state.email}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} value={this.state.password}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\" type=\"submit\">Login</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                       <p>{this.props.authError ? this.props.authError.message : ''}</p>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (credentials) => {dispatch(signIn(credentials))}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    this.props.signUp(this.state)\r\n  }\r\n  render() {\r\n    const { auth } = this.props\r\n    if(auth.uid)\r\n        return <Redirect to='/signin' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={this.handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n          </div>\r\n          <div className=\"center red-text\">{this.props.authError ? this.props.authError.message : ''}</div>\r\n        </form>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state)\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (userData) => dispatch(signUp(userData))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.id]: event.target.value\r\n        })\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        this.props.createProject(this.state)\r\n        this.setState({\r\n            title: '',\r\n            content: ''\r\n        })\r\n        this.props.history.push('/')\r\n        \r\n    }\r\n    render() {\r\n        const { auth } = this.props\r\n        if(!auth.uid)\r\n            return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} value={this.state.title}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <input type=\"text\" id=\"content\" onChange={this.handleChange} value={this.state.content}/>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\" type=\"submit\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => {dispatch(createProject(project))}\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\r\n    return (dispatch, getState, {getFirestore}) => {\r\n      // make async call to database\r\n      const firestore = getFirestore();\r\n      const profile = getState().firebase.profile;\r\n      const id = getState().firebase.auth.uid;\r\n      firestore.collection('projects').add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: id,\r\n        createdAt: new Date()\r\n      }).then(() => {\r\n        dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\r\n      }).catch(err => {\r\n        dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\r\n      });\r\n    }\r\n  };","import React from 'react';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Navbar/>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard}/>\n          <Route path=\"/project/:id\" component={ProjectDetails}/>\n          <Route path=\"/signin\" component={SignIn}/>\n          <Route path=\"/signup\" component={SignUp}/>\n          <Route path=\"/create\" component={CreateProject}/>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type){\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login was a success')\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            }\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login failed due to' + action.err)\r\n            return {\r\n                ...state,\r\n                authError: action.err,\r\n            }\r\n            \r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('Signed out')\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('Sign up was a success')\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('Sign up failed due to' + action.err)\r\n            return {\r\n                ...state,\r\n                authError: action.err,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n      {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n      {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n      {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n  }\r\n  \r\n  const projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n      case 'CREATE_PROJECT_SUCCESS':\r\n        console.log('create project success');\r\n        return state;\r\n      case 'CREATE_PROJECT_ERROR':\r\n        console.log('create project error');\r\n        return state;\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBYb3uyRHxP10MR9c4G-g4Cd1PEBMUmR54\",\r\n  authDomain: \"project-with-firebase-907bc.firebaseapp.com\",\r\n  databaseURL: \"https://project-with-firebase-907bc.firebaseio.com\",\r\n  projectId: \"project-with-firebase-907bc\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"371814475486\",\r\n  appId: \"1:371814475486:web:6ca77b3a4343a440\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport default firebase;","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './Config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users' , attachAuthIsReady: true}), // redux binding for firebase\n    reduxFirestore(fbConfig) // redux binding for firestore\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n  \n})\n"],"sourceRoot":""}